version: '3'

services:

  upload:
    build: ./upload/
    env_file:
      - .env
      - upload/UPLOAD.env
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy

  node-base:
    build: ./node/
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy

  dither-node:
    extends: node-base
    env_file:
      - node/envs/dither.env
  dither-proc:
    #build: ../endpoint_builds/containerized-image-processing/
    image: harbor-registry.whoi.edu/amplify/imageproc:latest

  mlanal-node:
    extends: node-base
    env_file:
      - node/envs/ml_anal.env
  mlanal-proc:
    #build: ../endpoint_builds/containerized-image-processing/
    image: harbor-registry.whoi.edu/amplify/ml-analyzed:latest

#  bin2roi-node:
#    build: ./node/
#    env_file:
#      - .env
#      - node/envs/bin2roi.env
#    depends_on:
#      rabbitmq:
#        condition: service_healthy
#  bin2roi-proc:
#    build: ../endpoint_builds/bin2roi/
#    #image: harbor-registry.whoi.edu/amplify/bin2roi:latest

  provenancedb:
    build: ./provenance-db/
    env_file:
        - .env
        - provenance-db/PROV.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy

  mongo:
    image: mongo:7.0-rc
    restart: always
    volumes:
      - dbvol:/data/db
      #- ./mongo-init/:/docker-entrypoint-initdb.d/  # .sh and .js startup scripts, eg. for creating users (provenance vs app)
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${PROVENANCE_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${PROVENANCE_DB_PASSWORD}
      MONGO_INITDB_DATABASE: amplify
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 2s
      timeout: 30s
      retries: 10

  mongo-ui:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${PROVENANCE_DB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${PROVENANCE_DB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${PROVENANCE_DB_USER}:${PROVENANCE_DB_PASSWORD}@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
        - mongo

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${AMQP_USER}
      RABBITMQ_DEFAULT_PASS: ${AMQP_PASSWORD}
    ports: # expose management GUI
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 2s
      timeout: 30s
      retries: 10

volumes:
  dbvol:

